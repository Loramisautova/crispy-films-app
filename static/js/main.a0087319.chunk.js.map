{"version":3,"sources":["app/enums.ts","app/features/enums.ts","app/consts.ts","app/utils/transformToCamelCase.ts","app/features/movies/api.ts","app/features/tv/api.ts","app/styles/global.ts","app/components/DetailsHeader/styles.ts","app/components/DetailsHeader/index.tsx","app/assets/logo.svg","app/routes/consts.ts","app/components/HoverMenu/styles.ts","app/components/HoverMenu/index.tsx","app/components/Header/Menu.tsx","app/components/Header/styles.ts","app/components/Header/index.tsx","app/layouts/MainLayout.tsx","app/assets/user.svg","app/components/CreditCard/styles.ts","app/components/CreditCard/index.tsx","app/pages/CreditPage/utils.ts","app/pages/CreditPage/styles.ts","app/pages/CreditPage/index.tsx","app/utils/date.tsx","app/components/ScoreProgress/styles.ts","app/components/ScoreProgress/index.tsx","app/components/MovieCard/styles.ts","app/components/MovieCard/index.tsx","app/components/Scroller/styles.ts","app/components/Scroller/index.tsx","app/components/MovieScroller/styles.ts","app/components/MovieScroller/index.tsx","app/features/models.ts","app/components/VideoPlayer/styles.ts","app/components/VideoPlayer/index.tsx","app/components/VideoCard/styles.ts","app/components/VideoCard/index.tsx","app/components/VideoScroller/styles.ts","app/components/VideoScroller/index.tsx","app/features/trending/api.ts","app/components/SearchBar/styles.ts","app/components/SearchBar/index.tsx","app/pages/MainPage/styles.ts","app/pages/MainPage/index.tsx","app/components/CastCard/styles.ts","app/components/CastCard/index.tsx","app/components/CastScroller/styles.ts","app/components/CastScroller/index.tsx","app/components/CertificationChip/styles.ts","app/components/CertificationChip/index.tsx","app/components/PosterCard/styles.ts","app/components/PosterCard/index.tsx","app/utils/time.tsx","app/utils/numbers.tsx","app/components/MovieFacts/styles.ts","app/components/FactsCard/styles.ts","app/components/FactsCard/index.tsx","app/components/MovieFacts/index.tsx","app/components/RecommendationCard/styles.ts","app/components/RecommendationCard/index.tsx","app/components/RecomendationScroller/styles.ts","app/components/RecomendationScroller/index.tsx","app/pages/MoviePage/styles.ts","app/pages/MoviePage/index.tsx","app/utils/filterCrewByJobs.tsx","app/components/TvFacts/styles.ts","app/components/TvFacts/index.tsx","app/pages/TvPage/index.tsx","app/features/search/api.ts","app/components/SearchResultPanelItem.tsx/styles.ts","app/components/SearchResultPanelItem.tsx/index.tsx","app/components/SearchResultsPanel/styles.ts","app/components/SearchResultsPanel/index.tsx","app/pages/SearchPage/styles.ts","app/pages/SearchPage/index.tsx","app/index.tsx","app/store.ts","serviceWorker.ts","app/mocks.ts","app/styles/theme.ts","index.tsx"],"names":["EMediaType","EElementSize","EAPITag","TMDB_API_BASE_URL","TRAILERS","name","key","site","size","type","official","publishedAt","id","transformToCamelCase","data","camelcaseKeys","deep","tmdbMoviesApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","MOVIE","endpoints","build","getPopularMovies","query","url","params","api_key","transformResponse","response","getMovie","movieId","providesTags","_","__","getMovieCredits","getMovieRecommendations","results","map","item","date","releaseDate","useGetPopularMoviesQuery","usePrefetch","useGetMovieQuery","useGetMovieCreditsQuery","useGetMovieRecommendationsQuery","tmdbTvApi","TV","getPopularTv","getTv","tvId","getTvCredits","cast","c","character","roles","r","join","crew","getTvRecommendations","title","originalTitle","firstAirDate","useGetPopularTvQuery","useGetTvQuery","useGetTvCreditsQuery","useGetTvRecommendationsQuery","globalStyles","theme","layoutSidePadding","paddingLeft","spacing","paddingRight","pagePadding","globalUseStyles","makeStyles","createStyles","a","outline","textDecoration","color","palette","primary","main","secondary","useStyles","root","backgroundColor","Colors","contrastText","cursor","opacity","wrapper","width","display","padding","image","content","flexWrap","alignItems","alignContent","link","DetailsHeader","props","classes","useState","details","setDetails","useParams","useGetMovieState","useGetTvState","substring","useEffect","posterPath","href","toString","undefined","className","to","src","alt","Typography","variant","gutterBottom","component","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","cx","cy","height","rx","x","y","SvgLogo","_ref","svgRef","titleId","viewBox","xmlns","ref","ForwardRef","APP_ROUTES","PATH","CAST","marginLeft","trigger","triggerOpened","menuPaper","borderTopLeftRadius","borderTopRightRadius","menuItemRoot","popoverRoot","pointerEvents","popoverPaper","HoverMenu","items","React","anchorEl","setAnchorEl","mouseOverButton","setMouseOverButton","mouseOverMenu","setMouseOverMenu","open","setOpen","handleClick","event","currentTarget","handleClose","classnames","aria-owns","aria-haspopup","role","tabIndex","onClick","onKeyPress","onMouseEnter","onMouseLeave","Menu","paper","getContentAnchorEl","elevation","MenuListProps","PopoverClasses","anchorOrigin","vertical","horizontal","transformOrigin","onClose","keepMounted","disableRestoreFocus","MenuItem","e","onMenuItemClick","handleMenuItemClick","HeaderMenu","flexGrow","toolbar","logo","marginRight","logoImage","nav","search","position","borderRadius","shape","alpha","common","white","breakpoints","up","searchIcon","justifyContent","inputRoot","inputInput","transition","transitions","create","Header","handleLogoClick","window","location","replace","AppBar","Toolbar","InputBase","placeholder","input","inputProps","MainLayout","children","_ref3","xlinkHref","overflow","_ref4","clipPath","_ref5","_ref6","stroke","SvgUser","xmlnsXlink","marginBottom","userImage","fontWeight","typography","fontWeightMedium","subTitle","grey","CreditCard","profilePath","groupByDepartment","reduce","acc","curr","department","push","contentWrapper","paddingTop","castNum","departmentFirst","marginTop","departmentTitle","panel","CreditPage","groupedCrew","setGroupedCrew","groupedCast","setGroupedCast","useGetMovieCreditsState","useGetTvCreditsState","flattenedCrew","values","previousValue","currentValue","concat","actor","sort","idx","Fragment","person","job","getFormattedDate","dateStr","format","Date","score","border","small","percent","progress","top","left","red","yellow","green","circle","strokeLinecap","ScoreProgress","voteAverage","isSmall","MD","SM","voteAveragePercentage","CircularProgress","value","MovieCard","header","headerTitle","headerTabItem","fontSize","caption","overflowX","overflowY","Scroller","tabs","selectedTab","setSelectedTab","Tabs","textColor","onChange","newSelectedTab","tab","Tab","label","card","MovieScroller","movieCardItem","isTvListItem","transform","black","flexDirection","close","iframe","VideoPlayer","isOpen","videoKey","autoplay","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","frameBorder","video","play","icon","VideoCard","setIsOpen","minHeight","VideoScroller","trailer","tmdbTrendingApi","TRENDING","getTrending","period","useGetTrendingQuery","fontWeightBold","margin","textField","searchBtn","SearchBar","setValue","history","useHistory","Paper","Button","preventDefault","queryString","qs","q","handleSearch","aria-label","searchSection","MainPage","trendingTab","setTrendingTab","popularTab","setPopularTab","isTvTabSelected","useGetPopularTvState","useGetPopularMoviesState","skip","prefetchPopularMovies","usePopularMoviesPrefetch","useGetTrendingState","prefetchTrendingWeek","useTrendingPrefetch","popularResults","CastCard","right","backgroundImage","cardWrapper","moreCard","alignSelf","arrow","CastScroller","viewMoreUrl","slice","certification","CertificationChip","certificationChip","poster","boxSizing","fontWeightLight","facts","genres","actions","chart","text","tagline","overview","people","profile","minWidth","profileTitle","profileSubtitle","PosterCard","runtime","creators","runtimeStr","useMemo","arr","runtimeNum","result","hour","Math","floor","minutes","calcRuntime","genre","index","creator","jobs","formatMoney","num","Intl","NumberFormat","style","currency","section","FactsCard","MovieFacts","status","originalLanguage","revenue","budget","language","ISO6391","getName","imageWrapper","visibility","titleWrapper","textOverflow","whiteSpace","RecommendationCard","backdropPath","round","dateFormat","RecommendationScroller","recommendations","recommendation","sectionPoster","paddingBottom","MoviePage","useGetMovieRecommendationsState","filteredCrew","jobTitles","includes","find","p","Grid","container","xs","TvFacts","networks","network","logoPath","TvPage","useGetTvRecommendationsState","episodeRunTime","createdBy","tmdbSearchApi","SEARCH","useLazySearchQuery","resultItem","textAlign","count","SearchResultPanelItem","SearchResultsPanel","movieResults","tvResults","peopleResults","Card","CardHeader","MenuList","SearchPage","useLocation","searchQuery","ignoreQueryPrefix","filterResultsByType","mediaType","App","path","render","exact","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","dispatch","Boolean","hostname","match","setupWorker","createTheme","ReactDOM","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a0087319.chunk.js","sourcesContent":["/** Media type. */\nexport enum EMediaType {\n    TV = 'TV',\n    MOVIE = 'MOVIE',\n}\n\n/** Size type. */\nexport enum EElementSize {\n    SM = 'SM',\n    MD = 'MD',\n    LG = 'LG',\n}\n","/** API tags. */\nexport enum EAPITag {\n    MOVIE = 'MOVIE',\n    TV = 'TV',\n    TRENDING = 'TRENDING',\n    SEARCH = 'SEARCH',\n}\n","import { IVideoItem } from './features/models';\n\n/** Application name */\nexport const APP_NAME = 'Crispy Films';\n\n/** Base API prefix. */\nexport const TMDB_API_BASE_URL = 'https://api.themoviedb.org/3';\n\n/** Trailers. */\nexport const TRAILERS: IVideoItem[] = [\n    {\n        name: 'Fight Club - Theatrical Trailer Remastered in HD',\n        key: '6JnN1DmbqoU',\n        site: 'YouTube',\n        size: 1080,\n        type: 'Trailer',\n        official: false,\n        publishedAt: '2015-02-26 03:19:25 UTC',\n        id: '5e382d1b4ca676001453826d',\n    },\n    {\n        name: 'Fight Club | #TBT Trailer | 20th Century FOX',\n        key: 'BdJKm16Co6M',\n        site: 'YouTube',\n        size: 1080,\n        type: 'Trailer',\n        official: true,\n        publishedAt: '2014-10-02 19:20:22 UTC',\n        id: '5c9294240e0a267cd516835f',\n    },\n];\n","import camelcaseKeys from 'camelcase-keys';\n\n/**\n * Transform input data to camel case.\n *\n * @param data Data to transform.\n */\nexport const transformToCamelCase = <T>(data: Record<string, unknown> | readonly unknown[]): T =>\n    camelcaseKeys(data, { deep: true }) as T;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\n\nimport { TMDB_API_BASE_URL } from '../../consts';\nimport { transformToCamelCase } from '../../utils/transformToCamelCase';\nimport { EAPITag } from '../enums';\nimport {\n    IPaginatedMovieList,\n    IMovieListItem,\n    IMediaCreditList,\n    IPaginatedData,\n    IMovieRecommendationItem,\n    IRecommendations,\n} from '../models';\n\n/** TMDB movies api. */\nexport const tmdbMoviesApi = createApi({\n    reducerPath: 'movies',\n    baseQuery: fetchBaseQuery({ baseUrl: `${TMDB_API_BASE_URL}/movie` }),\n    tagTypes: [EAPITag.MOVIE],\n    endpoints: (build) => ({\n        getPopularMovies: build.query<IPaginatedMovieList, void>({\n            query: () => ({\n                url: `/popular`,\n                params: { api_key: '2982bad10a93c3bc7f2c5245f865294c' },\n            }),\n            transformResponse: (response: Record<string, unknown>): IPaginatedMovieList =>\n                transformToCamelCase(response),\n        }),\n        getMovie: build.query<IMovieListItem, string>({\n            query: (movieId) => ({\n                url: `/${movieId}`,\n                params: { api_key: '2982bad10a93c3bc7f2c5245f865294c' },\n            }),\n            transformResponse: (response: Record<string, unknown>): IMovieListItem => transformToCamelCase(response),\n            providesTags: (_, __, id) => [{ type: EAPITag.MOVIE, id }],\n        }),\n        getMovieCredits: build.query<IMediaCreditList, string>({\n            query: (movieId) => ({\n                url: `/${movieId}/credits`,\n                params: { api_key: '2982bad10a93c3bc7f2c5245f865294c' },\n            }),\n            transformResponse: (response: Record<string, unknown>): IMediaCreditList => transformToCamelCase(response),\n        }),\n        getMovieRecommendations: build.query<IPaginatedData<IRecommendations>, string>({\n            query: (movieId) => ({\n                url: `/${movieId}/recommendations`,\n                params: { api_key: '2982bad10a93c3bc7f2c5245f865294c' },\n            }),\n            transformResponse: (response: Record<string, unknown>): IPaginatedData<IRecommendations> => {\n                const data = transformToCamelCase<IPaginatedData<IMovieRecommendationItem>>(response);\n\n                return {\n                    ...data,\n                    results: data.results.map((item) => ({\n                        ...item,\n                        date: item.releaseDate,\n                    })),\n                };\n            },\n        }),\n    }),\n});\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nexport const {\n    useGetPopularMoviesQuery,\n    usePrefetch,\n    useGetMovieQuery,\n    useGetMovieCreditsQuery,\n    useGetMovieRecommendationsQuery,\n} = tmdbMoviesApi;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\n\nimport { TMDB_API_BASE_URL } from '../../consts';\nimport { transformToCamelCase } from '../../utils/transformToCamelCase';\nimport { EAPITag } from '../enums';\nimport {\n    IMediaCreditList,\n    IPaginatedData,\n    IPaginatedTvList,\n    IRecommendations,\n    ITVCast,\n    ITVListItem,\n    ITvRecommendationItem,\n} from '../models';\n\n/** TMDB tv api. */\nexport const tmdbTvApi = createApi({\n    reducerPath: 'tv',\n    baseQuery: fetchBaseQuery({ baseUrl: `${TMDB_API_BASE_URL}/tv` }),\n    tagTypes: [EAPITag.TV],\n    endpoints: (build) => ({\n        getPopularTv: build.query<IPaginatedTvList, void>({\n            query: () => ({\n                url: `/popular`,\n                params: { api_key: '2982bad10a93c3bc7f2c5245f865294c' },\n            }),\n            transformResponse: (response: Record<string, unknown>): IPaginatedTvList => transformToCamelCase(response),\n        }),\n        getTv: build.query<ITVListItem, string>({\n            query: (tvId) => ({\n                url: `/${tvId}`,\n                params: { api_key: '2982bad10a93c3bc7f2c5245f865294c' },\n            }),\n            transformResponse: (response: Record<string, unknown>): ITVListItem => transformToCamelCase(response),\n            providesTags: (_, __, id) => [{ type: EAPITag.TV, id }],\n        }),\n        getTvCredits: build.query<IMediaCreditList, string>({\n            query: (tvId) => ({\n                url: `/${tvId}/aggregate_credits`,\n                params: { api_key: '2982bad10a93c3bc7f2c5245f865294c' },\n            }),\n            transformResponse: (response: Record<string, unknown>): IMediaCreditList => {\n                const data = transformToCamelCase<IMediaCreditList<ITVCast>>(response);\n\n                return {\n                    id: data.id,\n                    cast: data.cast.map((c) => ({\n                        ...c,\n                        character: c.roles?.map((r) => r.character).join(', '),\n                    })),\n                    crew: data.crew,\n                };\n            },\n        }),\n        getTvRecommendations: build.query<IPaginatedData<IRecommendations>, string>({\n            query: (tvId) => ({\n                url: `/${tvId}/recommendations`,\n                params: { api_key: '2982bad10a93c3bc7f2c5245f865294c' },\n            }),\n            transformResponse: (response: Record<string, unknown>): IPaginatedData<IRecommendations> => {\n                const data = transformToCamelCase<IPaginatedData<ITvRecommendationItem>>(response);\n\n                return {\n                    ...data,\n                    results: data.results.map((item) => ({\n                        ...item,\n                        title: item.name || item.originalTitle,\n                        date: item.firstAirDate,\n                    })),\n                };\n            },\n        }),\n    }),\n});\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nexport const { useGetPopularTvQuery, useGetTvQuery, useGetTvCreditsQuery, useGetTvRecommendationsQuery } = tmdbTvApi;\n","import { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Theme } from '@material-ui/core/styles/createTheme';\n\nexport const globalStyles = (theme: Theme) => ({\n    layoutSidePadding: {\n        paddingLeft: theme.spacing(8),\n        paddingRight: theme.spacing(8),\n    },\n    pagePadding: theme.spacing(3, 0),\n});\n\nexport const globalUseStyles = makeStyles((theme) =>\n    createStyles({\n        '@global': {\n            a: {\n                outline: 'none',\n                textDecoration: 'none',\n                '&:link, &:visited': {\n                    color: theme.palette.primary.main,\n                },\n                '&:hover': {\n                    color: theme.palette.secondary.main,\n                },\n            },\n        },\n    }),\n);\n","import { makeStyles } from '@material-ui/core';\nimport * as Colors from '@material-ui/core/colors';\nimport { globalStyles } from '../../styles/global';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: Colors.blueGrey['900'],\n        '& $a': {\n            '&:link, &:visited': {\n                color: theme.palette.primary.contrastText,\n                cursor: 'pointer',\n            },\n            '&:hover': {\n                '& $image': {\n                    opacity: 0.8,\n                },\n                color: theme.palette.secondary.main,\n            },\n        },\n    },\n    wrapper: {\n        width: '100%',\n        display: 'flex',\n        padding: theme.spacing(2, 2),\n        ...globalStyles(theme).layoutSidePadding,\n    },\n    image: {\n        display: 'flex',\n        cursor: 'pointer',\n    },\n    title: {\n        display: 'flex',\n        cursor: 'pointer',\n    },\n    content: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        alignContent: 'center',\n        paddingLeft: theme.spacing(3),\n    },\n    link: {\n        width: '100%',\n    },\n}));\n","import { Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { EMediaType } from '../../enums';\nimport { IIdRouteParam } from '../../features/models';\nimport { useGetMovieQuery } from '../../features/movies/api';\nimport { useGetTvQuery } from '../../features/tv/api';\n\nimport { useStyles } from './styles';\n\ninterface IProps {\n    type: EMediaType;\n}\n\ninterface IDetails {\n    id: number;\n    title: string;\n    posterPath?: string;\n    releaseDate: string;\n    href: string;\n}\n\nexport const DetailsHeader: React.FC<IProps> = (props) => {\n    const { type } = props;\n    const classes = useStyles();\n    const [details, setDetails] = useState<IDetails | undefined>();\n\n    const { id: movieId } = useParams<IIdRouteParam>();\n    const { id: tvId } = useParams<IIdRouteParam>();\n\n    const useGetMovieState = useGetMovieQuery(movieId);\n    const useGetTvState = useGetTvQuery(tvId);\n\n    const date = details?.releaseDate.substring(0, 4);\n\n    useEffect(() => {\n        if (type === EMediaType.MOVIE) {\n            setDetails(\n                useGetMovieState.data\n                    ? {\n                          id: useGetMovieState.data?.id,\n                          title: useGetMovieState.data?.title,\n                          posterPath: useGetMovieState.data?.posterPath,\n                          releaseDate: useGetMovieState.data?.releaseDate,\n                          href: `/movie/${useGetMovieState.data?.id?.toString()}`,\n                      }\n                    : undefined,\n            );\n        } else {\n            setDetails(\n                useGetTvState.data\n                    ? {\n                          id: useGetTvState.data?.id,\n                          title: useGetTvState.data?.name,\n                          posterPath: useGetTvState.data?.posterPath,\n                          releaseDate: useGetTvState.data?.firstAirDate,\n                          href: `/tv/${useGetTvState.data?.id?.toString()}`,\n                      }\n                    : undefined,\n            );\n        }\n    }, [type, useGetMovieState.data, useGetTvState.data]);\n\n    return (\n        <div className={classes.root}>\n            {details && (\n                <div className={classes.wrapper}>\n                    <Link to={details.href}>\n                        <div className={classes.image}>\n                            <img\n                                src={`https://www.themoviedb.org/t/p/w58_and_h87_face${details.posterPath}`}\n                                alt={details.title}\n                            />\n                        </div>\n                    </Link>\n                    <div className={classes.content}>\n                        <Link to={details.href}>\n                            <div className={classes.title}>\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                    {details.title} ({date})\n                                </Typography>\n                            </div>\n                        </Link>\n                        <Link to={details.href} className={classes.link}>\n                            <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\n                                &#x2190; Back to main\n                            </Typography>\n                        </Link>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"flat\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m344 488h-272l-32-256h336z\",\n  fill: \"#e82f3e\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m464 488h-96l-16-160h128z\",\n  fill: \"#0296e5\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m473.71 390.89-4.72 47.17-107.89-19.04-4.88-48.86z\",\n  fill: \"#0296e5\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m488 296h-144l8-32h128z\",\n  fill: \"#eaeae8\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m448 264h-16v-80l24-48h16l-24 56z\",\n  fill: \"#0276b4\"\n}), /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"#cbcbcb\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m184 232h48v256h-48z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m144 488h-40l-16-256h48z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m312 488h-40l8-256h48z\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m291.714 120.036a20 20 0 0 0 -11.142-26 20 20 0 1 0 -37.139-14.856 20 20 0 0 0 -14.856 37.139c.208.083.418.139.627.215a.275.275 0 0 0 -.014.03 20 20 0 0 0 37.139 14.856c0-.011.006-.022.01-.032a19.986 19.986 0 0 0 25.375-11.352z\",\n  fill: \"#d18d28\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m187.88 99.034a20 20 0 0 0 -25.913-11.334 20 20 0 0 0 -37.25 14.576 20 20 0 0 0 14.576 37.25c.208-.081.4-.185.6-.272 0 .01.006.021.01.032a20 20 0 1 0 37.25-14.576c0-.011-.01-.02-.014-.031a19.985 19.985 0 0 0 10.741-25.645z\",\n  fill: \"#fbb540\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m99.88 48.054a20 20 0 0 0 -25.913-11.337 20 20 0 1 0 -37.25 14.576 20 20 0 0 0 14.576 37.25c.208-.081.4-.184.6-.272 0 .011.006.021.01.032a20 20 0 0 0 37.25-14.576c0-.011-.01-.02-.014-.03a19.986 19.986 0 0 0 10.741-25.643z\",\n  fill: \"#d18d28\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m120 184a20 20 0 0 0 -20-20 20 20 0 0 0 -40 0 20 20 0 0 0 0 40c.223 0 .439-.026.661-.033v.033a20 20 0 1 0 40 0c0-.011 0-.022 0-.033a19.986 19.986 0 0 0 19.339-19.967z\",\n  fill: \"#fbb540\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m200 184a20 20 0 0 0 -20-20 20 20 0 0 0 -40 0 20 20 0 0 0 0 40c.223 0 .439-.026.661-.033v.033a20 20 0 0 0 40 0c0-.011 0-.022 0-.033a19.986 19.986 0 0 0 19.339-19.967z\",\n  fill: \"#d18d28\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m280 184a20 20 0 0 0 -20-20 20 20 0 0 0 -40 0 20 20 0 0 0 0 40c.223 0 .439-.026.661-.033v.033a20 20 0 0 0 40 0c0-.011 0-.022 0-.033a19.986 19.986 0 0 0 19.339-19.967z\",\n  fill: \"#fbb540\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m360 184a20 20 0 0 0 -20-20 20 20 0 0 0 -40 0 20 20 0 0 0 0 40c.223 0 .439-.026.661-.033v.033a20 20 0 0 0 40 0c0-.011 0-.022 0-.033a19.986 19.986 0 0 0 19.339-19.967z\",\n  fill: \"#d18d28\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m389.936 95.625a20 20 0 0 0 -9.1-26.78 20 20 0 0 0 -35.881-17.681 20 20 0 0 0 -17.68 35.881c.2.1.406.171.608.262 0 .01-.012.019-.017.029a20 20 0 1 0 35.881 17.68c0-.01.008-.02.013-.03a19.985 19.985 0 0 0 26.176-9.361z\",\n  fill: \"#fbb540\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 208,\n  cy: 352,\n  fill: \"#eaeae8\",\n  r: 72\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m473.71 390.89-4.72 47.17-107.89-19.04-4.88-48.86z\",\n  fill: \"#0276b4\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m336 296h160v32h-160z\",\n  fill: \"#cbcbcb\"\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  fill: \"#eaeae8\",\n  height: 32,\n  rx: 16,\n  width: 368,\n  x: 24,\n  y: 200\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m432 248h16v16h-16z\",\n  fill: \"#015078\"\n}));\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.4f5fd7c0.svg\";\nexport { ForwardRef as ReactComponent };","/** App routing. */\nexport const APP_ROUTES = {\n    MAIN: {\n        PATH: '/',\n    },\n    EXAMPLES: {\n        ASYNC: { PATH: '/examples/async' },\n    },\n    MOVIE: {\n        PATH: '/movie/:id',\n        CAST: {\n            PATH: '/movie/:id/cast',\n        },\n    },\n    TV: {\n        PATH: '/tv/:id',\n        CAST: {\n            PATH: '/tv/:id/cast',\n        },\n    },\n    SEARCH: {\n        PATH: '/search',\n    },\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        cursor: 'pointer',\n        '& + &': {\n            marginLeft: theme.spacing(3),\n        },\n    },\n    trigger: {\n        padding: theme.spacing(3, 0),\n    },\n    triggerOpened: {\n        color: theme.palette.secondary.main,\n    },\n    menuPaper: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0,\n    },\n    menuItemRoot: {\n        '&:hover': {\n            color: theme.palette.secondary.main,\n        },\n    },\n    popoverRoot: {\n        pointerEvents: 'none',\n    },\n    popoverPaper: {\n        pointerEvents: 'auto',\n    },\n}));\n","import { Menu, MenuItem, Typography } from '@material-ui/core';\nimport classnames from 'classnames';\nimport React, { useEffect } from 'react';\n\nimport { useStyles } from './styles';\n\ninterface IHoverMenuItemProps {\n    title: string;\n    onClick?: (e: React.MouseEvent<unknown>) => void;\n}\n\ninterface IHoverMenuProps {\n    id: string;\n    title: string;\n    items: IHoverMenuItemProps[];\n}\n\nexport const HoverMenu: React.FC<IHoverMenuProps> = (props) => {\n    const { id, title, items } = props;\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [mouseOverButton, setMouseOverButton] = React.useState<boolean>(false);\n    const [mouseOverMenu, setMouseOverMenu] = React.useState<boolean>(false);\n    const [open, setOpen] = React.useState<boolean>(false);\n\n    useEffect(() => {\n        setOpen(mouseOverButton || mouseOverMenu);\n    }, [mouseOverButton, mouseOverMenu]);\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>) => {\n        setOpen(true);\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setMouseOverButton(false);\n        setMouseOverMenu(false);\n    };\n\n    const handleEnterButton = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n        setMouseOverButton(true);\n    };\n\n    const handleLeaveButton = () => {\n        setMouseOverButton(false);\n    };\n\n    const handleEnterMenu = () => {\n        setMouseOverMenu(true);\n    };\n\n    const handleLeaveMenu = () => {\n        setMouseOverMenu(false);\n    };\n\n    const handleMenuItemClick = (\n        e: React.MouseEvent<unknown>,\n        onMenuItemClick?: (e: React.MouseEvent<unknown>) => void,\n    ) => {\n        if (onMenuItemClick) {\n            onMenuItemClick(e);\n        }\n        handleClose();\n    };\n\n    return (\n        <div className={classes.root}>\n            <div\n                className={classnames(classes.trigger, { [classes.triggerOpened]: open })}\n                aria-owns={open ? id : undefined}\n                aria-haspopup=\"true\"\n                role=\"menuitem\"\n                tabIndex={0}\n                onClick={handleClick}\n                onKeyPress={handleClick}\n                onMouseEnter={handleEnterButton}\n                onMouseLeave={handleLeaveButton}\n            >\n                <Typography variant=\"body2\">{title}</Typography>\n            </div>\n            <Menu\n                id={id}\n                classes={{ paper: classes.menuPaper }}\n                anchorEl={anchorEl}\n                getContentAnchorEl={null}\n                open={open}\n                elevation={1}\n                MenuListProps={{\n                    onMouseEnter: handleEnterMenu,\n                    onMouseLeave: handleLeaveMenu,\n                }}\n                PopoverClasses={{\n                    root: classes.popoverRoot,\n                    paper: classes.popoverPaper,\n                }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                onClose={handleClose}\n                keepMounted\n                disableRestoreFocus\n            >\n                {items.map((item) => (\n                    <MenuItem\n                        key={item.title}\n                        classes={{ root: classes.menuItemRoot }}\n                        onClick={(e) => handleMenuItemClick(e, item.onClick)}\n                    >\n                        <Typography variant=\"body2\">{item.title}</Typography>\n                    </MenuItem>\n                ))}\n            </Menu>\n        </div>\n    );\n};\n","import React from 'react';\n\nimport { HoverMenu } from '../HoverMenu';\n\nexport const HeaderMenu: React.FC = () => (\n    <>\n        <HoverMenu\n            id=\"movies-menu\"\n            title=\"Movies\"\n            items={[\n                {\n                    title: 'Popular',\n                },\n                {\n                    title: 'Now playing',\n                },\n                {\n                    title: 'Upcoming',\n                },\n                {\n                    title: 'Top rated',\n                },\n            ]}\n        />\n        <HoverMenu\n            id=\"tv-shows-menu\"\n            title=\"TV Shows\"\n            items={[\n                {\n                    title: 'Popular',\n                },\n                {\n                    title: 'Airing today',\n                },\n                {\n                    title: 'On TV',\n                },\n                {\n                    title: 'Top rated',\n                },\n            ]}\n        />\n        <HoverMenu\n            id=\"people-menu\"\n            title=\"People\"\n            items={[\n                {\n                    title: 'Popular people',\n                },\n            ]}\n        />\n    </>\n);\n","import { alpha, makeStyles } from '@material-ui/core';\n\nimport { globalStyles } from '../../styles/global';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    toolbar: {\n        ...globalStyles(theme).layoutSidePadding,\n    },\n    logo: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        marginRight: theme.spacing(8),\n    },\n    logoImage: {\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n        marginRight: theme.spacing(2),\n    },\n    nav: {\n        display: 'flex',\n        flexGrow: 1,\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 200,\n            '&:focus': {\n                width: 400,\n            },\n        },\n    },\n}));\n","import { AppBar, InputBase, Toolbar, Typography } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React from 'react';\n\nimport { ReactComponent as Logo } from '../../assets/logo.svg';\nimport { APP_NAME } from '../../consts';\nimport { APP_ROUTES } from '../../routes/consts';\n\nimport { HeaderMenu } from './Menu';\nimport { useStyles } from './styles';\n\nexport const Header: React.FC = () => {\n    const classes = useStyles();\n\n    const handleLogoClick = () => window.location.replace(APP_ROUTES.MAIN.PATH);\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar className={classes.toolbar}>\n                <div\n                    className={classes.logo}\n                    role=\"link\"\n                    tabIndex={0}\n                    onClick={handleLogoClick}\n                    onKeyPress={handleLogoClick}\n                >\n                    <Logo className={classes.logoImage} />\n                    <Typography variant=\"h6\" display=\"inline\">\n                        {APP_NAME}\n                    </Typography>\n                </div>\n                <div className={classes.nav}>\n                    <HeaderMenu />\n                </div>\n                <div className={classes.search}>\n                    <div className={classes.searchIcon}>\n                        <SearchIcon />\n                    </div>\n                    <InputBase\n                        placeholder=\"Movies, TV Shows, People\"\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        inputProps={{ 'aria-label': 'search' }}\n                    />\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\nimport React from 'react';\n\nimport { globalStyles } from '../styles/global';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        ...globalStyles(theme).layoutSidePadding,\n    },\n}));\n\nexport const MainLayout: React.FC = (props) => {\n    const { children } = props;\n    const classes = useStyles();\n\n    return <div className={classes.root}>{children}</div>;\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"path\", {\n  id: \"a\",\n  d: \"M0 0h512v512H0z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"clipPath\", {\n  id: \"b\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#a\",\n  overflow: \"visible\"\n}));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  clipPath: \"url(#b)\",\n  fill: \"#C5C5C5\",\n  d: \"M0 0h512v512H0z\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  clipPath: \"url(#b)\",\n  fill: \"#FFF\",\n  d: \"M309.64 309.839c37.361-18.864 62.968-57.457 62.968-102.007 0-63.135-51.424-114.316-114.861-114.316-63.437 0-114.861 51.181-114.861 114.316 0 44.29 25.308 82.693 62.315 101.676-80.767 25.29-140.017 108.371-140.017 206.971 0 118.679 85.828 214.882 191.705 214.882 105.875 0 191.702-96.203 191.702-214.882-.001-98.167-58.729-180.958-138.951-206.64z\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", {\n  clipPath: \"url(#b)\",\n  fill: \"none\",\n  stroke: \"#000\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M-.5-54v36M-54 .5h36M-54 731.5h36M-.5 785v-36M511.5-54v36M566 .5h-36M566 731.5h-36M511.5 785v-36\"\n}));\n\nfunction SvgUser(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 512,\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUser);\nexport default __webpack_public_path__ + \"static/media/user.517bc56d.svg\";\nexport { ForwardRef as ReactComponent };","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: 'flex',\n        marginBottom: theme.spacing(1),\n    },\n    userImage: {\n        width: 66,\n        height: 66,\n    },\n    content: {\n        padding: theme.spacing(1),\n    },\n    title: {\n        fontWeight: theme.typography.fontWeightMedium,\n    },\n    subTitle: {\n        marginBottom: theme.spacing(0.2),\n        color: theme.palette.grey[600],\n    },\n}));\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport { ReactComponent as User } from '../../assets/user.svg';\n\nimport { useStyles } from './styles';\n\ninterface ICreditCardProps {\n    profilePath: string;\n    title: string;\n    subTitle: string;\n}\n\nexport const CreditCard: React.FC<ICreditCardProps> = (props) => {\n    const { profilePath, title, subTitle } = props;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                {profilePath?.length ? (\n                    <img src={`https://www.themoviedb.org/t/p/w66_and_h66_face${profilePath}`} alt={title} />\n                ) : (\n                    <User className={classes.userImage} />\n                )}\n            </div>\n            <div className={classes.content}>\n                <Typography className={classes.title} variant=\"body1\">\n                    {title}\n                </Typography>\n                <Typography className={classes.subTitle} variant=\"body2\">\n                    {subTitle}\n                </Typography>\n            </div>\n        </div>\n    );\n};\n","import { ICrew } from '../../features/models';\n\nexport type TGroupedCrew = Record<string, ICrew[]>;\n\n/**\n * Group crew by department.\n */\nexport const groupByDepartment = (crew?: ICrew[]) =>\n    crew?.reduce<TGroupedCrew>((acc, curr) => {\n        const { department } = curr;\n\n        if (!acc?.[department]) {\n            acc[department] = [];\n        }\n\n        acc[department].push(curr);\n\n        return acc;\n    }, {});\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    contentWrapper: {\n        display: 'flex',\n        paddingTop: theme.spacing(4),\n    },\n    title: {\n        display: 'flex',\n    },\n    castNum: {\n        marginLeft: theme.spacing(0.5),\n        color: theme.palette.grey[600],\n        fontWeight: 400,\n    },\n    departmentFirst: {\n        marginTop: theme.spacing(0),\n        marginBottom: theme.spacing(1),\n    },\n    departmentTitle: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(1),\n    },\n    panel: {\n        width: '100%',\n    },\n}));\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { CreditCard } from '../../components/CreditCard';\nimport { EMediaType } from '../../enums';\nimport { ICast, IIdRouteParam } from '../../features/models';\nimport { useGetMovieCreditsQuery } from '../../features/movies/api';\nimport { useGetTvCreditsQuery } from '../../features/tv/api';\n\nimport { groupByDepartment, TGroupedCrew } from './utils';\nimport { useStyles } from './styles';\n\ninterface IProps {\n    type: EMediaType;\n}\n\nexport const CreditPage: React.FC<IProps> = (props) => {\n    const { type } = props;\n    const classes = useStyles();\n    const [groupedCrew, setGroupedCrew] = useState<TGroupedCrew>({});\n    const [groupedCast, setGroupedCast] = useState<ICast[]>();\n\n    const { id: movieId } = useParams<IIdRouteParam>();\n    const { id: tvId } = useParams<IIdRouteParam>();\n\n    const useGetMovieCreditsState = useGetMovieCreditsQuery(movieId);\n    const useGetTvCreditsState = useGetTvCreditsQuery(tvId);\n\n    useEffect(() => {\n        if (type === EMediaType.MOVIE) {\n            setGroupedCrew(groupByDepartment(useGetMovieCreditsState.data?.crew) || {});\n            setGroupedCast(useGetMovieCreditsState.data?.cast);\n        } else {\n            setGroupedCrew(groupByDepartment(useGetTvCreditsState.data?.crew) || {});\n            setGroupedCast(useGetTvCreditsState.data?.cast);\n        }\n    }, [\n        type,\n        useGetMovieCreditsState.data?.crew,\n        useGetTvCreditsState.data?.crew,\n        useGetMovieCreditsState.data?.cast,\n        useGetTvCreditsState.data?.cast,\n    ]);\n\n    const flattenedCrew = Object.values(groupedCrew).reduce(\n        (previousValue, currentValue) => previousValue.concat(currentValue),\n        [],\n    );\n\n    return (\n        <div className={classes.contentWrapper}>\n            <section className={classes.panel}>\n                <div className={classes.title}>\n                    <h3>\n                        Cast\n                        <span className={classes.castNum}>{groupedCast?.length}</span>\n                    </h3>\n                </div>\n                <div>\n                    {groupedCast?.map((actor) => (\n                        <CreditCard\n                            key={`${actor.id}_${actor.character}`}\n                            profilePath={actor.profilePath}\n                            title={actor.name}\n                            subTitle={actor.character}\n                        />\n                    ))}\n                </div>\n            </section>\n            <section className={classes.panel}>\n                <div className={classes.title}>\n                    <h3>\n                        Crew\n                        <span className={classes.castNum}>{flattenedCrew?.length}</span>\n                    </h3>\n                </div>\n                {Object.keys(groupedCrew)\n                    .sort()\n                    .map((department, idx) => (\n                        <React.Fragment key={department}>\n                            <h4 className={idx === 0 ? classes.departmentFirst : classes.departmentTitle}>\n                                {department}\n                            </h4>\n                            {groupedCrew[department].map((person) => (\n                                <CreditCard\n                                    key={`${person.id}_${person.job}`}\n                                    profilePath={person.profilePath}\n                                    title={person.name}\n                                    subTitle={person.job}\n                                />\n                            ))}\n                        </React.Fragment>\n                    ))}\n            </section>\n        </div>\n    );\n};\n","import { format } from 'date-fns';\n\n/** Formatted Date. */\nexport const getFormattedDate = (dateStr: string) => {\n    const formattedDate = format(new Date(dateStr), 'dd MMM, yyyy');\n\n    return formattedDate;\n};\n","import { makeStyles } from '@material-ui/core';\nimport * as Colors from '@material-ui/core/colors';\n\nexport const useStyles = makeStyles((theme) => ({\n    score: {\n        width: 68,\n        height: 68,\n        position: 'relative',\n        borderRadius: '50%',\n        backgroundColor: Colors.blueGrey['900'],\n        border: `4px solid ${Colors.blueGrey['900']}`,\n    },\n    small: {\n        '&$score': {\n            width: 40,\n            height: 40,\n            border: `2px solid ${Colors.blueGrey['900']}`,\n        },\n    },\n    percent: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.primary.contrastText,\n    },\n    progress: {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        // '& > svg': {\n        //     color: theme.palette.success.main,\n        // },\n    },\n    grey: {\n        '&$progress': {\n            color: Colors.grey['400'],\n        },\n    },\n    red: {\n        '&$progress': {\n            color: Colors.red['500'],\n        },\n    },\n    yellow: {\n        '&$progress': {\n            color: Colors.yellow['500'],\n        },\n    },\n    green: {\n        '&$progress': {\n            color: Colors.green['500'],\n        },\n    },\n    circle: {\n        strokeLinecap: 'round',\n    },\n}));\n","import React from 'react';\nimport { CircularProgress, Typography } from '@material-ui/core';\nimport classnames from 'classnames';\n\nimport { EElementSize } from '../../enums';\n\nimport { useStyles } from './styles';\n\ninterface IScoreProgressProps {\n    voteAverage?: number;\n    size?: EElementSize;\n}\n\nexport const ScoreProgress: React.FC<IScoreProgressProps> = (props) => {\n    const { voteAverage, size = EElementSize.MD } = props;\n    const isSmall = size === EElementSize.SM;\n    const classes = useStyles();\n\n    const voteAveragePercentage = voteAverage ? voteAverage * 10 : 0;\n\n    return (\n        <div\n            className={classnames(classes.score, {\n                [classes.small]: isSmall,\n            })}\n        >\n            <Typography className={classes.percent} variant={isSmall ? 'caption' : 'body1'}>\n                {voteAveragePercentage === 0 ? 'NR' : `${voteAveragePercentage}%`}\n            </Typography>\n            <CircularProgress\n                classes={{\n                    circle: classes.circle,\n                }}\n                className={classnames(classes.progress, {\n                    [classes.grey]: voteAveragePercentage === 0,\n                    [classes.red]: voteAveragePercentage > 0 && voteAveragePercentage <= 39,\n                    [classes.yellow]: voteAveragePercentage >= 40 && voteAveragePercentage <= 69,\n                    [classes.green]: voteAveragePercentage >= 70,\n                })}\n                variant=\"determinate\"\n                value={voteAveragePercentage === 0 ? 100 : voteAveragePercentage}\n                size=\"100%\"\n            />\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        '&:hover': {\n            '& $image': {\n                opacity: 0.8,\n            },\n            '& $title': {\n                color: theme.palette.secondary.main,\n            },\n        },\n    },\n    image: {\n        width: 150,\n        '& > img': {\n            display: 'inline-block',\n            width: '100%',\n            height: '100%',\n        },\n    },\n    content: {\n        padding: theme.spacing(1),\n    },\n    title: {\n        fontWeight: theme.typography.fontWeightMedium,\n    },\n    score: {\n        marginTop: theme.spacing(-5),\n    },\n    subTitle: {\n        marginTop: theme.spacing(0.3),\n        color: theme.palette.grey[600],\n    },\n}));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport classnames from 'classnames';\n\nimport { getFormattedDate } from '../../utils/date';\nimport { EElementSize } from '../../enums';\nimport { IClassName } from '../../models';\n\nimport { ScoreProgress } from '../ScoreProgress';\n\nimport { useStyles } from './styles';\n\nexport interface IMovieCardProps extends IClassName {\n    id?: number;\n    title: string;\n    date: string;\n    posterPath?: string;\n    href: string;\n    voteAverage?: number;\n}\n\nexport const MovieCard: React.FC<IMovieCardProps> = (props) => {\n    const { className, title, date, posterPath, href, voteAverage } = props;\n    const classes = useStyles();\n\n    return (\n        <div className={classnames(classes.root, className)}>\n            <Link to={href}>\n                <div className={classes.image}>\n                    {posterPath && (\n                        <img src={`https://www.themoviedb.org/t/p/w440_and_h660_face${posterPath}`} alt={title} />\n                    )}\n                </div>\n            </Link>\n            <div className={classes.content}>\n                <div className={classes.score}>\n                    <ScoreProgress voteAverage={voteAverage} size={EElementSize.SM} />\n                </div>\n                <Link to={href}>\n                    <Typography className={classes.title} variant=\"body1\">\n                        {title}\n                    </Typography>\n                </Link>\n                <Typography className={classes.subTitle} variant=\"body2\">\n                    {getFormattedDate(date)}\n                </Typography>\n            </div>\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        '& + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    headerTitle: {\n        marginRight: theme.spacing(10),\n        fontWeight: theme.typography.fontWeightMedium,\n    },\n    headerTabItem: {\n        fontSize: theme.typography.caption.fontSize,\n    },\n    content: {\n        display: 'flex',\n        padding: theme.spacing(1, 0),\n        overflowX: 'scroll',\n        overflowY: 'hidden',\n    },\n}));\n","import React from 'react';\nimport { Tab, Tabs, Typography } from '@material-ui/core';\nimport classnames from 'classnames';\n\nimport { useStyles } from './styles';\n\nexport interface ITabItemProps {\n    title: string;\n    onMouseEnter?: (e: React.MouseEvent<unknown>) => void;\n    onClick?: (e: React.MouseEvent<unknown>) => void;\n}\n\ninterface IScrollerProps {\n    title?: string;\n    tabs?: ITabItemProps[];\n    className?: string;\n}\n\nexport const Scroller: React.FC<IScrollerProps> = (props) => {\n    const { title, tabs, children, className } = props;\n    const classes = useStyles();\n    const [selectedTab, setSelectedTab] = React.useState(0);\n\n    const handleChangeSelectedTab = (event: React.ChangeEvent<unknown>, newSelectedTab: number) => {\n        setSelectedTab(newSelectedTab);\n    };\n\n    return (\n        <div className={classnames(classes.root, className)}>\n            <div className={classes.header}>\n                <Typography className={classes.headerTitle} variant=\"h5\">\n                    {title}\n                </Typography>\n                {tabs?.length && (\n                    <Tabs value={selectedTab} textColor=\"primary\" onChange={handleChangeSelectedTab}>\n                        {tabs.map((tab) => (\n                            <Tab\n                                classes={{\n                                    root: classes.headerTabItem,\n                                }}\n                                label={tab.title}\n                                onMouseEnter={tab.onMouseEnter}\n                                onClick={tab.onClick}\n                            />\n                        ))}\n                    </Tabs>\n                )}\n            </div>\n            <div className={classes.content}>{children}</div>\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    card: {\n        '& + &': {\n            marginLeft: theme.spacing(3),\n        },\n    },\n}));\n","import React from 'react';\n\nimport { IMovieListItem, isTvListItem, ITVListItem } from '../../features/models';\n\nimport { IMovieCardProps, MovieCard } from '../MovieCard';\nimport { ITabItemProps, Scroller } from '../Scroller';\n\nimport { useStyles } from './styles';\n\ninterface IMovieScrollerProps {\n    title: string;\n    items?: (IMovieListItem | ITVListItem)[];\n    tabs: ITabItemProps[];\n}\n\nexport const MovieScroller: React.FC<IMovieScrollerProps> = (props) => {\n    const { items, tabs, title } = props;\n    const classes = useStyles();\n\n    return (\n        <Scroller tabs={tabs} title={title}>\n            {items?.map((item) => {\n                const movieCardItem: IMovieCardProps = isTvListItem(item)\n                    ? {\n                          id: item.id,\n                          title: item.name,\n                          date: item.firstAirDate,\n                          posterPath: item.posterPath,\n                          href: `/tv/${item.id.toString()}`,\n                          voteAverage: item.voteAverage,\n                      }\n                    : {\n                          id: item.id,\n                          title: item.title,\n                          date: item.releaseDate,\n                          posterPath: item.posterPath,\n                          href: `/movie/${item.id.toString()}`,\n                          voteAverage: item.voteAverage,\n                      };\n                return (\n                    <MovieCard\n                        key={movieCardItem.id}\n                        className={classes.card}\n                        title={movieCardItem.title}\n                        date={movieCardItem.date}\n                        posterPath={movieCardItem.posterPath}\n                        href={movieCardItem.href}\n                        voteAverage={movieCardItem.voteAverage}\n                    />\n                );\n            })}\n        </Scroller>\n    );\n};\n","import { IPagination } from '../models';\n\n/** Paginated data generic model. */\nexport interface IPaginatedData<T> extends IPagination {\n    results: T[];\n}\n\n/**\n * Общая модель рекомендаций с сервера.\n */\nexport interface IRecommendationItemBase {\n    posterPath: string | null;\n    popularity: number;\n    id: number;\n    backdropPath: string | null;\n    adult: boolean;\n    voteAverage: number;\n    overview: string;\n    genreIds: number[];\n    voteCount: number;\n    originalTitle: string;\n}\n\n/**\n * Модель для рекомендаций фильмов с сервера.\n */\nexport interface IMovieRecommendationItem extends IRecommendationItemBase {\n    title: string;\n    releaseDate: string;\n    video: boolean;\n}\n\n/**\n * Модель для рекомендаций тв с сервера.\n */\nexport interface ITvRecommendationItem extends IRecommendationItemBase {\n    name: string;\n    firstAirDate: string;\n    originCountry: string[];\n}\n\n/**\n * Общая модель для рекомендаций для хранения в стейте приложения.\n */\nexport interface IRecommendations extends IRecommendationItemBase {\n    title: string;\n    date: string;\n}\n\n/** Movie list item model. */\nexport interface IMovieListItem {\n    id: number;\n    title: string;\n    originalTitle: string;\n    originalLanguage: string;\n    popularity: number;\n    overview: string;\n    releaseDate: string;\n    genreIds: number[];\n    posterPath?: string;\n    backdropPath?: string;\n    voteCount: number;\n    voteAverage: number;\n    adult: boolean;\n    video: boolean;\n    genres: IGenre[];\n    tagline?: string;\n    runtime: number;\n    createdBy?: ICreator[];\n    status: string;\n    budget: number;\n    revenue: number;\n}\n\n/** Languages list */\nexport interface ILanguagesItem {\n    iso6391: string;\n    englishName: string;\n    name: string;\n}\n\n/** People list item model. */\nexport interface IPeopleBase {\n    id: number;\n    adult: boolean;\n    gender: number;\n    knownForDepartment: string;\n    name: string;\n    originalName: string;\n    popularity: number;\n    profilePath: string;\n    creditId: string;\n}\n\n/** Cast list item model. */\nexport interface ICast extends IPeopleBase {\n    id: number;\n    order: number;\n    character: string;\n}\n\nexport interface IRole {\n    creditId: string;\n    character: string;\n    episodeCount: number;\n}\n\nexport interface ITVCast extends ICast {\n    roles: IRole[];\n    totalEpisodeCount: number;\n}\n\n/** Crew list item model. */\nexport interface ICrew extends IPeopleBase {\n    id: number;\n    department: string;\n    job: string;\n}\n\n/** Crew list filtered by job. */\nexport interface ICrewFilteredByJob {\n    name: string;\n    jobs: string[];\n}\n/** Results list filtered by type. */\nexport interface IResultsFilteredByType {\n    posterPath: string | null;\n    adult: boolean;\n    overview: string;\n    releaseDate: string;\n    originalTitle: string;\n    id: number;\n    mediaType: string;\n    originalLanguage: string;\n    title: string;\n    backdropPath: string | null;\n    popularity: number;\n    voteCount: number;\n    video: boolean;\n    voteAverage: number;\n}\n\n/** Media credit list item model. */\nexport interface IMediaCreditList<TCast = ICast, TCrew = ICrew> {\n    id: number;\n    cast: TCast[];\n    crew: TCrew[];\n}\n\n/** TV list item model. */\nexport interface ITVListItem {\n    id: number;\n    name: string;\n    originalName: string;\n    originalLanguage: string;\n    originalCountry: string[];\n    popularity: number;\n    overview: string;\n    firstAirDate: string;\n    genreIds: number[];\n    posterPath?: string;\n    backdropPath?: string;\n    voteCount: number;\n    voteAverage: number;\n    episodeRunTime: number[];\n    tagline?: string;\n    status: string;\n    type: string;\n    networks: INetwork[];\n    genres: IGenre[];\n    createdBy?: ICreator[];\n}\n\n/** Array of networks. */\nexport interface INetwork {\n    name: string;\n    id: number;\n    logoPath: string | null;\n    originCountry: string;\n}\n\n/** Array of genres. */\nexport interface IGenre {\n    id: number;\n    name: string;\n}\n\n/** Array of creators. */\nexport interface ICreator {\n    id: number;\n    creditId: string;\n    name: string;\n    gender: number;\n    profilePath: string;\n}\n\n/** Tv List Item type guard. */\nexport const isTvListItem = (item: ITVListItem | IMovieListItem): item is ITVListItem =>\n    (item as ITVListItem).name !== undefined || (item as ITVListItem).firstAirDate !== undefined;\n\n/** Movie List Item type guard. */\nexport const isMovieListItem = (item: ITVListItem | IMovieListItem): item is IMovieListItem =>\n    (item as IMovieListItem).title !== undefined || (item as IMovieListItem).releaseDate !== undefined;\n\n/** Movie list model. */\nexport interface IPaginatedMovieList extends IPaginatedData<IMovieListItem> {}\n\n/** Tv list model. */\nexport interface IPaginatedTvList extends IPaginatedData<ITVListItem> {}\n\n/** Video item model. */\nexport interface IVideoItem {\n    name: string;\n    key: string;\n    site: string;\n    size: number;\n    type: string;\n    official: boolean;\n    publishedAt: string;\n    id: string;\n}\n\n/** Route param for movie. */\nexport interface IIdRouteParam {\n    id: string;\n}\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    wrapper: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 1024,\n        backgroundColor: theme.palette.common.black,\n        outline: 'none',\n    },\n    header: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: theme.spacing(2),\n    },\n    title: {\n        color: theme.palette.primary.contrastText,\n    },\n    close: {\n        color: theme.palette.common.white,\n        cursor: 'pointer',\n    },\n    iframe: {\n        width: '100%',\n        height: '100%',\n    },\n}));\n","import * as React from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Backdrop, Box, Fade, Modal, Typography } from '@material-ui/core';\n\nimport { useStyles } from './styles';\n\ninterface IVideoPlayerProps {\n    isOpen: boolean;\n    onClose: () => void;\n    title: string;\n    videoKey: string;\n    width?: number;\n    height?: number;\n    autoplay?: boolean;\n}\n\nexport const VideoPlayer: React.FC<IVideoPlayerProps> = (props) => {\n    const { isOpen, onClose, title, videoKey, width = 1024, height = 512, autoplay = true } = props;\n    const classes = useStyles();\n    let src = `https://www.youtube.com/embed/${videoKey}`;\n    if (autoplay) {\n        src = `${src}?autoplay=1`;\n    }\n\n    return (\n        <div>\n            {isOpen && (\n                <Modal\n                    aria-labelledby=\"transition-modal-title\"\n                    aria-describedby=\"transition-modal-description\"\n                    open={isOpen}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n                    <Fade in={isOpen}>\n                        <Box className={classes.wrapper}>\n                            <Typography className={classes.header} id=\"transition-modal-title\">\n                                <Typography className={classes.title} variant=\"h6\" component=\"h2\">\n                                    {title}\n                                </Typography>\n                                <CloseIcon className={classes.close} onClick={onClose} fontSize=\"small\" />\n                            </Typography>\n                            <div className={classes.iframe}>\n                                <iframe\n                                    title={title}\n                                    width={width.toString()}\n                                    height={height.toString()}\n                                    src={src}\n                                    frameBorder=\"0\"\n                                />\n                            </div>\n                        </Box>\n                    </Fade>\n                </Modal>\n            )}\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        '&:hover': {\n            '& $image': {\n                opacity: 0.8,\n            },\n            '& $title': {\n                color: theme.palette.secondary.main,\n            },\n        },\n    },\n    video: {\n        width: 300,\n        height: 'auto',\n        marginRight: theme.spacing(3),\n    },\n    wrapper: {\n        position: 'relative',\n        cursor: 'pointer',\n    },\n    image: {\n        width: 300,\n        height: `calc(300px / 1.78)`,\n        '& > img': {\n            display: 'inline-block',\n            width: '100%',\n            height: '100%',\n        },\n    },\n    play: {\n        display: 'flex',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: 300,\n        height: `calc(300px / 1.78)`,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    icon: {\n        color: theme.palette.primary.contrastText,\n        fontSize: '4em',\n    },\n    content: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        padding: theme.spacing(1),\n    },\n    title: {\n        fontWeight: theme.typography.fontWeightMedium,\n        cursor: 'pointer',\n    },\n    subTitle: {\n        marginTop: theme.spacing(0.3),\n        color: theme.palette.grey[600],\n    },\n}));\n","import { Typography } from '@material-ui/core';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport classnames from 'classnames';\nimport React from 'react';\n\nimport { getFormattedDate } from '../../utils/date';\nimport { IClassName } from '../../models';\n\nimport { VideoPlayer } from '../VideoPlayer';\n\nimport { useStyles } from './styles';\n\nexport interface IVideoCardProps extends IClassName {\n    id: string;\n    videoKey: string;\n    title: string;\n    date: string;\n}\n\nexport const VideoCard: React.FC<IVideoCardProps> = (props) => {\n    const { className, title, date, videoKey } = props;\n    const [isOpen, setIsOpen] = React.useState(false);\n    const classes = useStyles();\n\n    const handleClose = () => {\n        setIsOpen(false);\n    };\n\n    return (\n        <div className={classnames(classes.root, className)}>\n            <div className={classes.video}>\n                <div className={classes.wrapper} onClick={() => setIsOpen(true)}>\n                    <div className={classes.image}>\n                        {videoKey && <img src={`https://img.youtube.com/vi/${videoKey}/hqdefault.jpg`} alt={title} />}\n                    </div>\n                    <div className={classes.play}>\n                        <PlayArrowIcon className={classes.icon} />\n                    </div>\n                </div>\n                <div className={classes.content}>\n                    <Typography className={classes.title} variant=\"body1\">\n                        {title}\n                    </Typography>\n                    <Typography className={classes.subTitle} variant=\"body2\">\n                        {getFormattedDate(date)}\n                    </Typography>\n                </div>\n                <VideoPlayer isOpen={isOpen} onClose={handleClose} title={title} videoKey={videoKey} />\n            </div>\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    content: {\n        display: 'flex',\n        minHeight: 0,\n        height: 'auto',\n        padding: theme.spacing(3, 0),\n        overflowX: 'scroll',\n        overflowY: 'hidden',\n    },\n    card: {\n        '& + &': {\n            marginLeft: theme.spacing(3),\n        },\n    },\n}));\n","import React from 'react';\n\nimport { IVideoItem } from '../../features/models';\nimport { Scroller, ITabItemProps } from '../Scroller';\nimport { VideoCard } from '../VideoCard';\n\nimport { useStyles } from './styles';\n\ninterface IVideoScrollerProps {\n    title: string;\n    items?: IVideoItem[];\n    tabs: ITabItemProps[];\n}\n\nexport const VideoScroller: React.FC<IVideoScrollerProps> = (props) => {\n    const classes = useStyles();\n    const { tabs, title, items } = props;\n\n    return (\n        <Scroller tabs={tabs} title={title}>\n            <div className={classes.content}>\n                {items?.map((trailer) => (\n                    <VideoCard id={trailer.id} videoKey={trailer.key} title={trailer.name} date={trailer.publishedAt} />\n                ))}\n            </div>\n        </Scroller>\n    );\n};\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\n\nimport { TMDB_API_BASE_URL } from '../../consts';\nimport { transformToCamelCase } from '../../utils/transformToCamelCase';\nimport { EAPITag } from '../enums';\nimport { IMovieListItem, IPaginatedData, ITVListItem } from '../models';\n\n/** TMDB Trending API. */\nexport const tmdbTrendingApi = createApi({\n    reducerPath: 'trending',\n    baseQuery: fetchBaseQuery({\n        baseUrl: `${TMDB_API_BASE_URL}/trending/all`,\n    }),\n    tagTypes: [EAPITag.TRENDING],\n    endpoints: (build) => ({\n        getTrending: build.query<IPaginatedData<IMovieListItem | ITVListItem>, string>({\n            query: (period) => ({\n                url: `/${period}`,\n                params: { api_key: '2982bad10a93c3bc7f2c5245f865294c' },\n            }),\n            transformResponse: (response: Record<string, unknown>): IPaginatedData<IMovieListItem | ITVListItem> =>\n                transformToCamelCase(response),\n        }),\n    }),\n});\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nexport const { useGetTrendingQuery, usePrefetch } = tmdbTrendingApi;\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    title: {\n        fontWeight: theme.typography.fontWeightBold,\n        margin: 0,\n    },\n    subTitle: {\n        fontWeight: theme.typography.fontWeightMedium,\n        marginBottom: theme.spacing(2),\n    },\n    search: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n        padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n    },\n    searchBtn: {\n        padding: `0 ${theme.spacing(2)}px`,\n        '&:hover': {\n            color: theme.palette.secondary.main,\n        },\n    },\n}));\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport InputBase from '@material-ui/core/InputBase';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport * as qs from 'qs';\n\nimport { APP_ROUTES } from '../../routes/consts';\n\nimport { useStyles } from './styles';\n\nexport const SearchBar = () => {\n    const classes = useStyles();\n    const [value, setValue] = useState('');\n    const history = useHistory();\n\n    const handleSearch = (e: React.MouseEvent<unknown>) => {\n        e.preventDefault();\n\n        if (value) {\n            const queryString = qs.stringify({ q: value });\n\n            history.push(`${APP_ROUTES.SEARCH.PATH}?${queryString}`);\n        }\n    };\n\n    return (\n        <div>\n            <Typography variant=\"h3\" className={classes.title} gutterBottom component=\"div\">\n                Welcome.\n            </Typography>\n            <Typography variant=\"h6\" className={classes.subTitle} gutterBottom component=\"div\">\n                Navigate the world of Crispy Films by exploring films, tv shows and people.\n            </Typography>\n            <Paper component=\"form\" className={classes.search}>\n                <InputBase\n                    placeholder=\"Search Film, TV Show and People\"\n                    className={classes.textField}\n                    value={value}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n                    inputProps={{ 'aria-label': 'Search Film, TV Show and People' }}\n                />\n                <Button\n                    type=\"submit\"\n                    className={classes.searchBtn}\n                    onClick={(e) => handleSearch(e)}\n                    aria-label=\"search\"\n                >\n                    Search\n                </Button>\n            </Paper>\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    searchSection: {\n        margin: `${theme.spacing(15)}px 0 ${theme.spacing(15)}px`,\n    },\n}));\n","import React, { useState } from 'react';\n\nimport { MovieScroller } from '../../components/MovieScroller';\nimport { VideoScroller } from '../../components/VideoScroller';\nimport { TRAILERS } from '../../consts';\nimport { useGetPopularMoviesQuery, usePrefetch as usePopularMoviesPrefetch } from '../../features/movies/api';\nimport { useGetTrendingQuery, usePrefetch as useTrendingPrefetch } from '../../features/trending/api';\nimport { useGetPopularTvQuery } from '../../features/tv/api';\nimport { SearchBar } from '../../components/SearchBar';\nimport { useStyles } from './styles';\n\nexport const MainPage: React.FC = () => {\n    const [trendingTab, setTrendingTab] = useState('day');\n    const [popularTab, setPopularTab] = useState('tv');\n    const isTvTabSelected = popularTab === 'tv';\n    const classes = useStyles();\n\n    const useGetPopularTvState = useGetPopularTvQuery();\n    const useGetPopularMoviesState = useGetPopularMoviesQuery(undefined, { skip: isTvTabSelected });\n    const prefetchPopularMovies = usePopularMoviesPrefetch('getPopularMovies');\n\n    const useGetTrendingState = useGetTrendingQuery(trendingTab);\n    const prefetchTrendingWeek = useTrendingPrefetch('getTrending');\n\n    const popularResults = isTvTabSelected\n        ? useGetPopularTvState.data?.results\n        : useGetPopularMoviesState.data?.results;\n\n    return (\n        <div>\n            <div className={classes.searchSection}>\n                <SearchBar />\n            </div>\n            <MovieScroller\n                items={popularResults}\n                title=\"What's Popular\"\n                tabs={[\n                    { title: 'On TV', onClick: () => setPopularTab('tv') },\n                    {\n                        title: 'In Theaters',\n                        onClick: () => setPopularTab('movie'),\n                        onMouseEnter: () => prefetchPopularMovies(),\n                    },\n                ]}\n            />\n            <VideoScroller\n                items={TRAILERS}\n                title=\"Latest Trailers\"\n                tabs={[\n                    {\n                        title: 'On TV',\n                    },\n                    {\n                        title: 'In Theatres',\n                        onClick: () => setTrendingTab('week'),\n                        onMouseEnter: () => prefetchTrendingWeek('week'),\n                    },\n                ]}\n            />\n            <MovieScroller\n                items={useGetTrendingState.data?.results}\n                title=\"Trending\"\n                tabs={[\n                    {\n                        title: 'Today',\n                        onClick: () => setTrendingTab('day'),\n                    },\n                    {\n                        title: 'This week',\n                        onClick: () => setTrendingTab('week'),\n                        onMouseEnter: () => prefetchTrendingWeek('week'),\n                    },\n                ]}\n            />\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {},\n    image: {\n        width: 150,\n        '& > img': {\n            display: 'inline-block',\n            width: '100%',\n            height: '100%',\n        },\n    },\n    userImage: {\n        width: 150,\n        height: 225,\n        backgroundColor: '#C5C5C5',\n    },\n    content: {\n        padding: theme.spacing(1),\n    },\n    title: {\n        fontWeight: theme.typography.fontWeightMedium,\n    },\n    subTitle: {\n        marginTop: theme.spacing(0.3),\n        color: theme.palette.grey[600],\n    },\n}));\n","import { Typography } from '@material-ui/core';\nimport classnames from 'classnames';\nimport React from 'react';\n\nimport { IClassName } from '../../models';\n\nimport { useStyles } from './styles';\nimport { ReactComponent as User } from '../../assets/user.svg';\n\nexport interface ICastCardProps extends IClassName {\n    id?: number;\n    name: string;\n    character?: string;\n    profilePath?: string;\n}\n\nexport const CastCard: React.FC<ICastCardProps> = (props) => {\n    const { className, name, character, profilePath } = props;\n    const classes = useStyles();\n\n    return (\n        <div className={classnames(classes.root, className)}>\n            <div className={classes.image}>\n                {profilePath?.length ? (\n                    <img src={`https://www.themoviedb.org/t/p/w440_and_h660_face${profilePath}`} alt={name} />\n                ) : (\n                    <User className={classes.userImage} />\n                )}\n            </div>\n            <div className={classes.content}>\n                <Typography className={classes.title} variant=\"body1\">\n                    {name}\n                </Typography>\n                <Typography className={classes.subTitle} variant=\"body2\">\n                    {character}\n                </Typography>\n            </div>\n        </div>\n    );\n};\n","import { alpha, makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'relative',\n        '&::after': {\n            content: `''`,\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            width: 60,\n            height: '100%',\n            backgroundImage: `linear-gradient(to right, rgb(255, 255, 255, 0) 0%, rgb(255, 255, 255, 1) 100%)`,\n        },\n    },\n    card: {\n        '& + &': {\n            marginLeft: theme.spacing(3),\n        },\n    },\n    cardWrapper: {\n        display: 'flex',\n        textDecoration: 'none',\n        color: alpha(theme.palette.common.black, 1),\n        height: '100%',\n    },\n    moreCard: {\n        width: '150px',\n        fontWeight: theme.typography.fontWeightBold,\n        alignSelf: 'center',\n    },\n    arrow: {\n        marginLeft: theme.spacing(0.5),\n    },\n}));\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { ICast } from '../../features/models';\nimport { CastCard } from '../CastCard';\nimport { Scroller } from '../Scroller';\n\nimport { useStyles } from './styles';\n\ninterface ICastScrollerProps {\n    items: ICast[];\n    viewMoreUrl: string;\n}\n\nexport const CastScroller: React.FC<ICastScrollerProps> = (props) => {\n    const { items, viewMoreUrl } = props;\n    const classes = useStyles();\n\n    return (\n        <Scroller className={classes.root}>\n            {items?.slice(0, 10).map((item) => (\n                <CastCard\n                    className={classes.card}\n                    name={item.name}\n                    character={item.character}\n                    profilePath={item.profilePath}\n                />\n            ))}\n            <div className={classes.card}>\n                <Link to={viewMoreUrl} className={classes.cardWrapper}>\n                    <Typography className={classes.moreCard} variant=\"body1\">\n                        View More\n                        <span className={classes.arrow}>&#x2192;</span>\n                    </Typography>\n                </Link>\n            </div>\n        </Scroller>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\nimport * as Colors from '@material-ui/core/colors';\n\nexport const useStyles = makeStyles((theme) => ({\n    certification: {\n        border: `1px solid ${Colors.grey['400']}`,\n        padding: theme.spacing(0, 0.3),\n    },\n}));\n","import React from 'react';\n\nimport { useStyles } from './styles';\n\ninterface ICertificationChipProps {\n    certificationChip: string;\n}\n\nexport const CertificationChip: React.FC<ICertificationChipProps> = (props) => {\n    const { certificationChip } = props;\n    const classes = useStyles();\n\n    return <div className={classes.certification}>{certificationChip}</div>;\n};\n","import { makeStyles } from '@material-ui/core';\nimport * as Colors from '@material-ui/core/colors';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    poster: {\n        width: '300px',\n        height: '450px',\n    },\n    content: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        paddingLeft: theme.spacing(5),\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'center',\n        boxSizing: 'border-box',\n    },\n    title: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginBottom: theme.spacing(3),\n    },\n    name: {\n        display: 'flex',\n        '& > h1': {\n            marginTop: 0,\n            marginBottom: 0,\n        },\n        width: '100%',\n    },\n    date: {\n        marginLeft: theme.spacing(1),\n        fontWeight: theme.typography.fontWeightLight,\n        color: Colors.grey[600],\n    },\n    facts: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n    },\n    certification: {\n        marginRight: theme.spacing(1),\n        color: Colors.grey[800],\n    },\n    genres: {\n        display: 'flex',\n        marginLeft: theme.spacing(1),\n    },\n    actions: {\n        marginBottom: theme.spacing(3),\n    },\n    chart: {\n        display: 'flex',\n    },\n    text: {\n        marginLeft: theme.spacing(1),\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    tagline: {\n        marginBottom: theme.spacing(1),\n    },\n    overview: {\n        marginTop: theme.spacing(1),\n    },\n    people: {\n        marginTop: theme.spacing(3),\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    profile: {\n        minWidth: 140,\n        justifyContent: 'flex-start',\n        padding: theme.spacing(0, 5, 2, 0),\n    },\n    profileTitle: {\n        fontWeight: theme.typography.fontWeightBold,\n    },\n    profileSubtitle: {},\n}));\n","import React, { useMemo } from 'react';\nimport { Box, Typography } from '@material-ui/core';\n\nimport { calcRuntime } from '../../utils/time';\nimport { IGenre } from '../../features/models';\n\nimport { ScoreProgress } from '../ScoreProgress';\nimport { CertificationChip } from '../CertificationChip';\n\nimport { useStyles } from './styles';\n\ninterface ICreatorItem {\n    name: string;\n    jobs: string[];\n}\n\ninterface IPosterCardProps {\n    posterPath?: string;\n    name: string;\n    genres: IGenre[];\n    runtime?: number[];\n    tagline?: string;\n    overview: string;\n    voteAverage: number;\n    releaseDate: string;\n    creators?: ICreatorItem[];\n}\n\nconst certification = 'TV-14';\n\nexport const PosterCard: React.FC<IPosterCardProps> = (props) => {\n    const { name, posterPath, genres, runtime, tagline, overview, voteAverage, releaseDate, creators } = props;\n    const classes = useStyles();\n\n    const date = releaseDate.substring(0, 4);\n    const runtimeStr = useMemo(() => (runtime && runtime?.length > 0 ? calcRuntime(runtime) : undefined), [runtime]);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.poster}>\n                <img src={`https://www.themoviedb.org/t/p/w300_and_h450_face${posterPath}`} alt={name} />\n            </div>\n            <div className={classes.content}>\n                <div className={classes.title}>\n                    <Box className={classes.name}>\n                        <h1>{name}</h1>\n                        <h1 className={classes.date}>({date})</h1>\n                    </Box>\n                    <Box className={classes.facts}>\n                        <Typography className={classes.certification}>\n                            <CertificationChip certificationChip={certification} />\n                        </Typography>\n                        <Box className={classes.genres}>\n                            {genres.map((genre, index, arr) => (\n                                <Typography key={genre.id}>\n                                    {genre.name}\n                                    {index !== arr.length - 1 ? ',' : ''}&nbsp;\n                                </Typography>\n                            ))}\n                        </Box>\n                        {runtime && <Typography>&bull; {runtimeStr}</Typography>}\n                    </Box>\n                </div>\n                <div className={classes.actions}>\n                    <div className={classes.chart}>\n                        <ScoreProgress voteAverage={voteAverage} />\n                        <div className={classes.text}>\n                            <Typography component=\"div\" variant=\"subtitle2\">\n                                User <br />\n                                Score\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <Typography className={classes.tagline} color=\"textSecondary\" gutterBottom>\n                        {tagline}\n                    </Typography>\n                    {overview && (\n                        <>\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                Overview\n                            </Typography>\n                            <Typography className={classes.overview} gutterBottom component=\"div\" variant=\"body2\">\n                                {overview}\n                            </Typography>\n                        </>\n                    )}\n                    <div className={classes.people}>\n                        {creators?.map((creator) => (\n                            <div className={classes.profile}>\n                                <div className={classes.profileTitle}>{creator.name}</div>\n                                <div className={classes.profileSubtitle}>{creator.jobs}</div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","/** Formatted runtime */\nexport const calcRuntime = (arr: number[]) => {\n    const runtimeNum = arr[0];\n    let result = '';\n    if (runtimeNum > 0) {\n        const hour = Math.floor(runtimeNum / 60);\n        const minutes = runtimeNum % 60;\n\n        if (hour > 0 && minutes > 0) {\n            // Есть и часы и минуты.\n            result = `${hour}h ${minutes}m`;\n        } else if (hour > 0) {\n            // Есть только часы.\n            result = `${hour}h`;\n        } else if (minutes > 0) {\n            // Есть только минуты.\n            result = `${minutes}m`;\n        }\n    }\n\n    return result;\n};\n","/** Formatted  Money. */\nexport const formatMoney = (num: number) => {\n    return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(num);\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    section: {\n        marginBottom: theme.spacing(2),\n    },\n    title: {\n        fontWeight: theme.typography.fontWeightBold,\n    },\n    subTitle: {\n        fontWeight: theme.typography.fontWeightLight,\n    },\n}));\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    wrapper: {\n        width: '100%',\n    },\n    header: {\n        marginBottom: theme.spacing(1),\n        fontWeight: theme.typography.fontWeightBold,\n    },\n}));\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { useStyles } from './styles';\n\nexport const FactsCard: React.FC = (props) => {\n    const { children } = props;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.wrapper}>\n            <Typography variant=\"h6\" className={classes.header}>\n                Facts\n            </Typography>\n            <div>{children}</div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport ISO6391 from 'iso-639-1';\n\nimport { formatMoney } from '../../utils/numbers';\n\nimport { useStyles } from './styles';\nimport { FactsCard } from '../FactsCard';\n\ninterface IMovieFactsProps {\n    status: string;\n    originalLanguage: string;\n    revenue: number;\n    budget: number;\n}\n\nexport const MovieFacts: React.FC<IMovieFactsProps> = (props) => {\n    const { status, originalLanguage, revenue, budget } = props;\n    const classes = useStyles();\n\n    const language = ISO6391.getName(originalLanguage);\n\n    return (\n        <FactsCard>\n            <div className={classes.section}>\n                <Typography className={classes.title}> Status </Typography>\n                <Typography className={classes.subTitle}>{status}</Typography>\n            </div>\n            <div className={classes.section}>\n                <Typography className={classes.title}> Original Language </Typography>\n                <Typography className={classes.subTitle}>{language}</Typography>\n            </div>\n            <div className={classes.section}>\n                <Typography className={classes.title}> Revenue </Typography>\n                <Typography className={classes.subTitle}>{formatMoney(revenue)}</Typography>\n            </div>\n            <div className={classes.section}>\n                <Typography className={classes.title}> Budget </Typography>\n                <Typography className={classes.subTitle}>{formatMoney(budget)}</Typography>\n            </div>\n        </FactsCard>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\nimport * as Colors from '@material-ui/core/colors';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        width: 250,\n    },\n    image: {},\n    imageWrapper: {\n        height: 141,\n        '&:hover': {\n            '& $date': {\n                visibility: 'visible',\n            },\n        },\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: theme.spacing(1),\n    },\n    title: {\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    date: {\n        height: 40,\n        top: -40,\n        visibility: 'hidden',\n        display: 'flex',\n        position: 'relative',\n        alignItems: 'center',\n        opacity: 0.8,\n        padding: theme.spacing(0, 1),\n        backgroundColor: theme.palette.grey[100],\n    },\n    releaseDate: {\n        marginLeft: theme.spacing(1),\n    },\n}));\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport classnames from 'classnames';\nimport EventNoteSharpIcon from '@material-ui/icons/EventNoteSharp';\nimport { format } from 'date-fns';\n\nimport { useStyles } from './styles';\nimport { IClassName } from '../../models';\n\ninterface IRecommendationCardProps extends IClassName {\n    backdropPath: string | null;\n    title: string;\n    voteAverage: number;\n    releaseDate: string;\n}\n\nexport const RecommendationCard: React.FC<IRecommendationCardProps> = (props) => {\n    const { backdropPath, title, voteAverage, className, releaseDate } = props;\n    const classes = useStyles();\n\n    const voteAveragePercentage = voteAverage ? `${Math.round(voteAverage * 10)}%` : 'NR';\n\n    const dateFormat = format(new Date(releaseDate), 'dd/MM/yyyy');\n\n    return (\n        <div className={classnames(classes.root, className)}>\n            <div className={classes.imageWrapper}>\n                <img src={`https://www.themoviedb.org/t/p/w250_and_h141_face${backdropPath}`} alt={title} />\n                <div className={classes.date}>\n                    <EventNoteSharpIcon fontSize=\"small\" />\n                    <div className={classes.releaseDate}>{dateFormat}</div>\n                </div>\n            </div>\n            <div className={classes.titleWrapper}>\n                <Typography variant=\"body1\" className={classes.title}>\n                    {title}\n                </Typography>\n                <Typography variant=\"body1\">{voteAveragePercentage}</Typography>\n            </div>\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\nimport * as Colors from '@material-ui/core/colors';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'relative',\n        '&::after': {\n            content: `''`,\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            width: 60,\n            height: '100%',\n            backgroundImage: `linear-gradient(to right, rgb(255, 255, 255, 0) 0%, rgb(255, 255, 255, 1) 100%)`,\n        },\n    },\n    card: {\n        '& + &': {\n            marginLeft: theme.spacing(3),\n        },\n    },\n}));\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nimport { IRecommendations } from '../../features/models';\nimport { RecommendationCard } from '../RecommendationCard';\nimport { Scroller } from '../Scroller';\nimport { useStyles } from './styles';\n\ninterface IRecommendationScrollerProps {\n    recommendations: IRecommendations[];\n}\n\nexport const RecommendationScroller: React.FC<IRecommendationScrollerProps> = (props) => {\n    const { recommendations } = props;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h6\">Recommendations</Typography>\n            <Scroller>\n                {recommendations?.map((recommendation) => (\n                    <RecommendationCard\n                        className={classes.card}\n                        key={recommendation.id}\n                        backdropPath={recommendation.backdropPath}\n                        title={recommendation.title}\n                        voteAverage={recommendation.voteAverage}\n                        releaseDate={recommendation.date}\n                    />\n                ))}\n            </Scroller>\n        </div>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\n\nimport { globalStyles } from '../../styles/global';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        padding: globalStyles(theme).pagePadding,\n    },\n    sectionPoster: {\n        paddingBottom: theme.spacing(3),\n    },\n}));\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\n\nimport { IIdRouteParam, IMovieListItem } from '../../features/models';\nimport { useGetMovieCreditsQuery, useGetMovieQuery, useGetMovieRecommendationsQuery } from '../../features/movies/api';\n\nimport { CastScroller } from '../../components/CastScroller';\nimport { PosterCard } from '../../components/PosterCard';\nimport { MovieFacts } from '../../components/MovieFacts';\nimport { filterCrewByJobs } from '../../utils/filterCrewByJobs';\nimport { RecommendationScroller } from '../../components/RecomendationScroller';\n\nimport { useStyles } from './styles';\n\nexport const MoviePage: React.FC = () => {\n    const classes = useStyles();\n    const { id: movieId } = useParams<IIdRouteParam>();\n    const useGetMovieState = useGetMovieQuery(movieId);\n    const useGetMovieCreditsState = useGetMovieCreditsQuery(movieId);\n    const useGetMovieRecommendationsState = useGetMovieRecommendationsQuery(movieId);\n    const {\n        title,\n        posterPath,\n        genres,\n        runtime,\n        tagline,\n        overview,\n        voteAverage,\n        releaseDate,\n        status,\n        originalLanguage,\n        budget,\n        revenue,\n    } = useGetMovieState.data || ({} as IMovieListItem);\n\n    const filteredCrew = useMemo(\n        () => filterCrewByJobs(useGetMovieCreditsState.data?.crew, ['Director', 'Screenplay', 'Characters', 'Writer']),\n        [useGetMovieCreditsState.data?.crew],\n    );\n\n    return (\n        <div className={classes.root}>\n            {useGetMovieState.data && (\n                <div className={classes.sectionPoster}>\n                    <PosterCard\n                        name={title}\n                        posterPath={posterPath}\n                        genres={genres}\n                        runtime={[runtime]}\n                        tagline={tagline}\n                        overview={overview}\n                        voteAverage={voteAverage}\n                        releaseDate={releaseDate}\n                        creators={filteredCrew}\n                    />\n                </div>\n            )}\n            <Grid container item spacing={3}>\n                <Grid item xs={9}>\n                    {useGetMovieCreditsState.data && (\n                        <CastScroller\n                            items={useGetMovieCreditsState.data.cast}\n                            viewMoreUrl={`/movie/${useGetMovieCreditsState.data.id}/cast`}\n                        />\n                    )}\n                    <div>\n                        {useGetMovieRecommendationsState.data?.results?.length && (\n                            <RecommendationScroller recommendations={useGetMovieRecommendationsState.data.results} />\n                        )}\n                    </div>\n                </Grid>\n                <Grid item xs={3}>\n                    {useGetMovieState.data && (\n                        <MovieFacts\n                            status={status}\n                            originalLanguage={originalLanguage}\n                            budget={budget}\n                            revenue={revenue}\n                        />\n                    )}\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n","import { ICrew, ICrewFilteredByJob } from '../features/models';\n\n/** Crew filtered by jobs */\nexport const filterCrewByJobs = (crew: ICrew[] | undefined, jobTitles: string[]): ICrewFilteredByJob[] =>\n    crew?.reduce<ICrewFilteredByJob[]>((result, curr) => {\n        if (jobTitles.includes(curr.job)) {\n            const person = result.find((p) => p.name === curr.name);\n            if (person?.jobs.includes(curr.job)) {\n                person?.jobs.push(curr.job);\n            } else {\n                result.push({\n                    name: curr.name,\n                    jobs: [curr.job],\n                });\n            }\n        }\n\n        return result;\n    }, []) || [];\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n    section: {\n        marginBottom: theme.spacing(2),\n    },\n    title: {\n        fontWeight: theme.typography.fontWeightBold,\n    },\n    subTitle: {\n        fontWeight: theme.typography.fontWeightLight,\n    },\n}));\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport ISO6391 from 'iso-639-1';\n\nimport { INetwork } from '../../features/models';\n\nimport { FactsCard } from '../FactsCard';\n\nimport { useStyles } from './styles';\n\ninterface ITvFactsProps {\n    status: string;\n    originalLanguage: string;\n    type: string;\n    networks: INetwork[];\n}\n\nexport const TvFacts: React.FC<ITvFactsProps> = (props) => {\n    const { status, originalLanguage, type, networks } = props;\n    const classes = useStyles();\n\n    const language = ISO6391.getName(originalLanguage);\n\n    return (\n        <FactsCard>\n            <div className={classes.section}>\n                <Typography className={classes.title}> Status </Typography>\n                <Typography className={classes.subTitle}>{status}</Typography>\n            </div>\n            <div className={classes.section}>\n                <Typography className={classes.title}> Network </Typography>\n                {networks?.map((network) => (\n                    <img alt={network.name} src={`https://www.themoviedb.org/t/p/h30/${network.logoPath}`} />\n                ))}\n            </div>\n            <div className={classes.section}>\n                <Typography className={classes.title}> Type </Typography>\n                <Typography className={classes.subTitle}>{type}</Typography>\n            </div>\n            <div className={classes.section}>\n                <Typography className={classes.title}> Original Language </Typography>\n                <Typography className={classes.subTitle}>{language}</Typography>\n            </div>\n        </FactsCard>\n    );\n};\n","import React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\n\nimport { CastScroller } from '../../components/CastScroller';\nimport { PosterCard } from '../../components/PosterCard';\nimport { TvFacts } from '../../components/TvFacts';\nimport { IIdRouteParam, ITVListItem } from '../../features/models';\nimport { useGetTvCreditsQuery, useGetTvQuery, useGetTvRecommendationsQuery } from '../../features/tv/api';\nimport { useStyles } from '../MoviePage/styles';\nimport { RecommendationScroller } from '../../components/RecomendationScroller';\n\nexport const TvPage: React.FC = () => {\n    const classes = useStyles();\n    const { id: tvId } = useParams<IIdRouteParam>();\n    const useGetTvState = useGetTvQuery(tvId);\n    const useGetTvCreditsState = useGetTvCreditsQuery(tvId);\n    const useGetTvRecommendationsState = useGetTvRecommendationsQuery(tvId);\n\n    const {\n        name,\n        posterPath,\n        genres,\n        episodeRunTime,\n        tagline,\n        overview,\n        voteAverage,\n        firstAirDate,\n        originalLanguage,\n        status,\n        type,\n        networks,\n        createdBy,\n    } = useGetTvState.data || ({} as ITVListItem);\n\n    const filteredCrew = useMemo(\n        () =>\n            createdBy?.map((c) => {\n                return {\n                    name: c.name,\n                    jobs: ['Creator'],\n                };\n            }),\n        [createdBy],\n    );\n\n    return (\n        <div className={classes.root}>\n            {useGetTvState.data && (\n                <div className={classes.sectionPoster}>\n                    <PosterCard\n                        name={name}\n                        posterPath={posterPath}\n                        genres={genres}\n                        runtime={episodeRunTime}\n                        tagline={tagline}\n                        overview={overview}\n                        voteAverage={voteAverage}\n                        releaseDate={firstAirDate}\n                        creators={filteredCrew}\n                    />\n                </div>\n            )}\n            <Grid container item spacing={3}>\n                <Grid item xs={9}>\n                    {useGetTvCreditsState.data && (\n                        <CastScroller\n                            items={useGetTvCreditsState.data.cast}\n                            viewMoreUrl={`/tv/${useGetTvCreditsState.data.id}/cast`}\n                        />\n                    )}\n\n                    <div>\n                        {useGetTvRecommendationsState.data?.results?.length && (\n                            <RecommendationScroller recommendations={useGetTvRecommendationsState.data.results} />\n                        )}\n                    </div>\n                </Grid>\n                <Grid item xs={3}>\n                    <TvFacts status={status} networks={networks} type={type} originalLanguage={originalLanguage} />\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\n\nimport { TMDB_API_BASE_URL } from '../../consts';\nimport { transformToCamelCase } from '../../utils/transformToCamelCase';\nimport { EAPITag } from '../enums';\nimport { IPaginatedData } from '../models';\n\n/** TMDB Search API. */\nexport const tmdbSearchApi = createApi({\n    reducerPath: 'search',\n    baseQuery: fetchBaseQuery({\n        baseUrl: `${TMDB_API_BASE_URL}/search`,\n    }),\n    tagTypes: [EAPITag.SEARCH],\n    endpoints: (build) => ({\n        search: build.query<IPaginatedData<any>, string>({\n            query: (q) => {\n                return {\n                    url: '/multi',\n                    params: {\n                        api_key: `2982bad10a93c3bc7f2c5245f865294c`,\n                        query: q,\n                    },\n                };\n            },\n            transformResponse: (response: Record<string, unknown>): IPaginatedData<any> =>\n                transformToCamelCase(response),\n        }),\n    }),\n});\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nexport const { useLazySearchQuery } = tmdbSearchApi;\n","import { makeStyles } from '@material-ui/core';\nimport * as Colors from '@material-ui/core/colors';\n\nexport const useStyles = makeStyles((theme) => ({\n    resultItem: {\n        justifyContent: 'space-between',\n        textAlign: 'center',\n        '&:hover': {\n            '& $count': {\n                backgroundColor: theme.palette.common.white,\n            },\n        },\n    },\n    count: {\n        padding: theme.spacing(0, 1),\n        minWidth: 30,\n        backgroundColor: theme.palette.grey[200],\n    },\n}));\n","import React from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { Typography } from '@material-ui/core';\n\nimport { useStyles } from './styles';\n\nexport interface IItem {\n    title: string;\n    count?: number;\n}\n\nexport const SearchResultPanelItem: React.FC<IItem> = (props) => {\n    const { title, count } = props;\n    const classes = useStyles();\n\n    return (\n        <MenuItem className={classes.resultItem}>\n            <Typography>{title}</Typography>\n            <span className={classes.count}>{count}</span>\n        </MenuItem>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\nimport * as Colors from '@material-ui/core/colors';\n\nexport const useStyles = makeStyles((theme) => ({\n    title: {\n        padding: theme.spacing(2),\n        fontWeight: theme.typography.fontWeightMedium,\n        color: theme.palette.common.white,\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n","import React from 'react';\nimport { Card, CardHeader, MenuList } from '@material-ui/core';\n\nimport { SearchResultPanelItem } from '../SearchResultPanelItem.tsx';\nimport { IResultsFilteredByType } from '../../features/models';\nimport { useStyles } from './styles';\n\ninterface ISearchResultsPanelProps {\n    movieResults: IResultsFilteredByType[];\n    tvResults: IResultsFilteredByType[];\n    peopleResults: IResultsFilteredByType[];\n}\n\nexport const SearchResultsPanel: React.FC<ISearchResultsPanelProps> = (props) => {\n    const { movieResults = [], tvResults = [], peopleResults = [] } = props;\n    const classes = useStyles();\n\n    const items = [\n        { title: 'Movies', count: movieResults.length, id: 1 },\n        { title: 'TV Shows', count: tvResults.length, id: 2 },\n        { title: 'People', count: peopleResults.length, id: 3 },\n    ];\n\n    return (\n        <Card>\n            <CardHeader title=\"Search Results\" className={classes.title} />\n            <MenuList>\n                {items.map((item) => (\n                    <SearchResultPanelItem title={item.title} count={item.count} key={item.id} />\n                ))}\n            </MenuList>\n        </Card>\n    );\n};\n","import { makeStyles } from '@material-ui/core';\nimport { globalStyles } from '../../styles/global';\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        padding: globalStyles(theme).pagePadding,\n    },\n}));\n","import React, { useMemo, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport * as qs from 'qs';\n\nimport { useLazySearchQuery } from '../../features/search/api';\nimport { SearchResultsPanel } from '../../components/SearchResultsPanel';\nimport { IResultsFilteredByType } from '../../features/models';\n\nimport { useStyles } from './styles';\n\nexport const SearchPage = () => {\n    const { search } = useLocation();\n    const [query, queryState] = useLazySearchQuery();\n    const { data } = queryState;\n    const classes = useStyles();\n\n    const searchQuery = useMemo(() => qs.parse(search, { ignoreQueryPrefix: true })?.q?.toString(), [search]);\n\n    const filterResultsByType = useMemo(\n        () =>\n            (type: string): IResultsFilteredByType[] =>\n                data?.results.reduce((result: IResultsFilteredByType[], curr: IResultsFilteredByType) => {\n                    if (curr.mediaType === type) {\n                        result.push(curr);\n                    }\n\n                    return result;\n                }, []),\n        [data?.results],\n    );\n\n    useEffect(() => {\n        if (searchQuery !== undefined) {\n            query(searchQuery);\n        }\n    }, [query, searchQuery]);\n\n    return (\n        <Grid container spacing={2} className={classes.root}>\n            <Grid item xs={3}>\n                <SearchResultsPanel\n                    movieResults={filterResultsByType('movie')}\n                    tvResults={filterResultsByType('tv')}\n                    peopleResults={filterResultsByType('people')}\n                />\n            </Grid>\n            <Grid item xs={9}>\n                Section\n            </Grid>\n        </Grid>\n    );\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { DetailsHeader } from './components/DetailsHeader';\n\nimport { Header } from './components/Header';\nimport { EMediaType } from './enums';\nimport { MainLayout } from './layouts/MainLayout';\nimport { CreditPage } from './pages/CreditPage';\nimport { MainPage } from './pages/MainPage';\nimport { MoviePage } from './pages/MoviePage';\nimport { TvPage } from './pages/TvPage';\nimport { SearchPage } from './pages/SearchPage';\nimport { APP_ROUTES } from './routes/consts';\n\nimport { globalUseStyles } from './styles/global';\n\n/** Root app component. */\nexport const App: React.FC = () => {\n    globalUseStyles();\n\n    return (\n        <div>\n            <Header />\n            <Switch>\n                <Route\n                    path={APP_ROUTES.MOVIE.CAST.PATH}\n                    render={() => <DetailsHeader type={EMediaType.MOVIE} />}\n                    exact\n                />\n                <Route path={APP_ROUTES.TV.CAST.PATH} render={() => <DetailsHeader type={EMediaType.TV} />} exact />\n            </Switch>\n            <MainLayout>\n                <Switch>\n                    <Route component={MoviePage} path={APP_ROUTES.MOVIE.PATH} exact />\n                    <Route component={TvPage} path={APP_ROUTES.TV.PATH} exact />\n                    <Route\n                        path={APP_ROUTES.MOVIE.CAST.PATH}\n                        render={() => <CreditPage type={EMediaType.MOVIE} />}\n                        exact\n                    />\n                    <Route path={APP_ROUTES.TV.CAST.PATH} render={() => <CreditPage type={EMediaType.TV} />} exact />\n                    <Route component={SearchPage} path={APP_ROUTES.SEARCH.PATH} exact />\n                    <Route component={MainPage} path={APP_ROUTES.MAIN.PATH} />\n                </Switch>\n            </MainLayout>\n        </div>\n    );\n};\n","import { Action, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query/react';\n\nimport { tmdbMoviesApi } from './features/movies/api';\nimport { tmdbTrendingApi } from './features/trending/api';\nimport { tmdbTvApi } from './features/tv/api';\nimport { tmdbSearchApi } from './features/search/api';\n\n/** Configure store. */\nexport const store = configureStore({\n    reducer: {\n        [tmdbMoviesApi.reducerPath]: tmdbMoviesApi.reducer,\n        [tmdbTrendingApi.reducerPath]: tmdbTrendingApi.reducer,\n        [tmdbTvApi.reducerPath]: tmdbTvApi.reducer,\n        [tmdbSearchApi.reducerPath]: tmdbSearchApi.reducer,\n    },\n    /**\n     * Adding the api middleware enables caching, invalidation, polling,\n     * and other useful features of `rtk-query`.\n     */\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(tmdbMoviesApi.middleware),\n});\n\n/**\n * Setup redux listeners.\n *\n * Required for refetchOnFocus/refetchOnReconnect behaviors. See `setupListeners` docs - takes an optional\n * callback as the 2nd arg for customization.\n */\nsetupListeners(store.dispatch);\n\n/** Export typings. */\nexport type TAppDispatch = typeof store.dispatch;\nexport type TRootState = ReturnType<typeof store.getState>;\nexport type TAppThunk<ReturnType = void> = ThunkAction<ReturnType, TRootState, unknown, Action<string>>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    // eslint-disable-next-line no-console\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            // eslint-disable-next-line no-param-reassign\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            // eslint-disable-next-line no-console\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            // eslint-disable-next-line no-console\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            // eslint-disable-next-line no-console\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            // eslint-disable-next-line no-console\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                // eslint-disable-next-line no-console,@typescript-eslint/no-unsafe-member-access\n                console.error(error.message);\n            });\n    }\n}\n","import { setupWorker } from 'msw';\n\n/** Setup mock service worker. */\nexport const mockWorker = setupWorker();\n","import { unstable_createMuiStrictModeTheme as createTheme } from '@material-ui/core/styles';\nimport * as Colors from '@material-ui/core/colors';\n\nexport const theme = createTheme({\n    palette: {\n        primary: {\n            main: Colors.grey['900'],\n        },\n        secondary: {\n            main: Colors.deepOrange['400'],\n        },\n    },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport { App } from './app';\nimport { store } from './app/store';\nimport * as serviceWorker from './serviceWorker';\nimport { mockWorker } from './app/mocks';\nimport { theme } from './app/styles/theme';\n\nimport 'normalize.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <ThemeProvider theme={theme}>\n                    <App />\n                </ThemeProvider>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n/**\n * If you want your app to work offline and load faster, you can change\n * unregister() to register() below. Note this comes with some pitfalls.\n * Learn more about service workers: https://bit.ly/CRA-PWA\n */\nserviceWorker.unregister();\n\n/**\n * Mock Service Worker for development mode.\n * Learn more: https://mswjs.io/\n */\nif (process.env.NODE_ENV === 'development') {\n    mockWorker\n        .start()\n        // eslint-disable-next-line no-console\n        .catch((err) => console.log('Error when mock worker start.', err));\n}\n"],"sourceRoot":""}